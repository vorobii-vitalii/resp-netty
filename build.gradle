plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'io.vitaliivorobii.resp'
version = '1.0'

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'resp-netty'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'resp-netty'
                description = 'Implementation of REdis Serialization Protocol(RESP) in Netty '
                url = 'https://github.com/vorobii-vitalii/resp-netty'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'vorobii-vitalii'
                        name = 'Vitalii Vorobii'
                        email = 'vitalij.vorobij@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/vorobii-vitalii/resp-netty.git'
                    developerConnection = 'scm:git:ssh://github.com/vorobii-vitalii/resp-netty.git'
                    url = 'https://github.com/vorobii-vitalii/resp-netty'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:4.0.0-M1'

    // Netty
    implementation "io.netty:netty-all:5.0.0.Alpha2"

    // Logging facade
    implementation "org.slf4j:slf4j-api:2.1.0-alpha1"
}

test {
    useJUnitPlatform()
}